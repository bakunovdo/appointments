{"version":3,"sources":["components/Header/Header.js","components/Appointments/AppointmentItem/AppointmentItem.js","store/appointReducer.js","components/Appointments/Appointments.js","components/Tabs/TabMakeAppointInfo/DatePicker.js","components/Tabs/TabMakeAppointInfo/TabMakeAppointInfo.js","components/Tabs/TabMakeAppointConfirm/TabMakeAppointConfirm.js","components/NewAppointmentsForm/NewAppointmentsForm.js","App.js","store/store.js","index.js"],"names":["useStyles","makeStyles","theme","title","flexGrow","MakeAppointmentButton","to","Button","color","HeaderContainer","withRouter","props","classes","Toolbar","Typography","variant","className","location","pathname","Info","styled","span","AppointmentItem","date","fullName","labelId","note","completed","ListItem","role","undefined","alignItems","button","ListItemIcon","Checkbox","edge","onChange","toggleHandler","checked","tabIndex","disableRipple","inputProps","ListItemText","id","primary","secondary","component","format","Date","ListItemSecondaryAction","IconButton","aria-label","onClick","window","confirm","deleteHandler","initialState","list","confirmValues","setConfirmValues","values","type","payload","root","width","backgroundColor","palette","background","paper","minHeight","flex","emptyList","padding","textAlign","mapDispatchToProps","deleteAppointment","toggleAppointment","AppointmentsContainer","connect","state","appointments","Paper","elevation","List","map","item","key","length","Container","DatePicker","utils","DateFnsUtils","DateTimePicker","label","inputVariant","value","readOnly","disabled","disableToolbar","disablePast","required","Box","div","TabMakeAppointInfoContainer","React","useState","selectedDate","handleDateChange","useForm","control","handleSubmit","onSubmit","data","handleNext","autoComplete","as","TextField","name","defaultValue","fullWidth","handleBack","addAppointment","TabMakeAppointConfirmContainer","console","log","StepContent","step","NewAppointmentsForm","activeStep","setActiveStep","Stepper","prevActiveStep","SApp","SContentApp","App","AppBar","position","exact","path","persistedState","localStorage","getItem","JSON","parse","reducers","combineReducers","action","newAppoint","i","filter","store","createStore","subscribe","setItem","stringify","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7fa1022.chunk.js","sourcesContent":["import React from 'react';\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {NavLink, withRouter} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        flexGrow: 1,\r\n    }\r\n}));\r\n\r\nconst MakeAppointmentButton = () => {\r\n    return (\r\n        <NavLink to=\"/makeAppointment\">\r\n            <Button color=\"inherit\">\r\n                Make Appointment\r\n            </Button>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nconst Header = (props) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <Toolbar>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n                Appointments\r\n            </Typography>\r\n            {props.location.pathname === \"/\" && <MakeAppointmentButton/> }\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\n\r\nexport const HeaderContainer = withRouter(Header)","import React from 'react';\r\nimport {format, parseISO, formatISO} from \"date-fns\";\r\n\r\nimport styled from \"styled-components\"\r\n\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst Info = styled.span`\r\n    display:flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const AppointmentItem = (props) => {\r\n    const {date, fullName, labelId , note, completed} = props\r\n    const confirmDialog = () => {\r\n        const result = window.confirm(\"Delete appointment?\")\r\n        result && props.deleteHandler()\r\n    }\r\n\r\n    return (\r\n        <ListItem role={undefined} alignItems=\"flex-start\" button>\r\n            <ListItemIcon>\r\n                <Checkbox\r\n                    edge=\"start\"\r\n                    onChange={props.toggleHandler}\r\n                    checked={completed}\r\n                    tabIndex={-1}\r\n                    disableRipple\r\n                    inputProps={{'aria-labelledby': labelId}}\r\n                />\r\n            </ListItemIcon>\r\n            <ListItemText id={labelId}\r\n                          primary={fullName}\r\n                          secondary={\r\n                              <Info>\r\n                                  <Typography\r\n                                      component=\"span\"\r\n                                      variant=\"body2\"\r\n                                      color=\"textSecondary\"\r\n                                  >\r\n                                      {/*{date}*/}\r\n                                      {format( new Date(date), \"Pp\")}\r\n                                  </Typography>\r\n                                  <Typography\r\n                                      component=\"span\"\r\n                                      variant=\"body2\"\r\n                                      color=\"textSecondary\"\r\n                                  >\r\n                                      {note}\r\n                                  </Typography>\r\n                              </Info>\r\n                          }\r\n\r\n            />\r\n            <ListItemSecondaryAction>\r\n                <IconButton edge=\"end\" aria-label=\"delete\" onClick={confirmDialog}>\r\n                    <DeleteIcon/>\r\n                </IconButton>\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n    );\r\n}\r\n\r\n\r\n","const ADD_APPOINTMENT = \"ADD_APPOINTMENT\"\r\nconst DELETE_APPOINTMENT = \"DELETE_APPOINTMENT\"\r\nconst SET_CONFIRM_VALUES = \"SET_CONFIRM_VALUES\"\r\nconst TOGGLE_APPOINTMENT = \"TOGGLE_APPOINTMENT\"\r\n\r\n\r\nconst initialState = {\r\n    list: [],\r\n    confirmValues: null\r\n}\r\n\r\nexport const appointmentsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_APPOINTMENT: {\r\n            const newAppoint = {\r\n                id: state.list?.length + 1 || 1,\r\n                ...action.payload\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                confirmValues: null,\r\n                completed: false,\r\n                list: [newAppoint, ...state.list]\r\n            }\r\n        }\r\n        case TOGGLE_APPOINTMENT: {\r\n            return {\r\n                ...state,\r\n                list: state.list.map(i => i.id === action.payload ? { ...i, i: !i.completed } : i)\r\n            }\r\n        }\r\n        case DELETE_APPOINTMENT: {\r\n            return {...state, list: state.list.filter(item => item.id !== action.payload)}\r\n        }\r\n        case SET_CONFIRM_VALUES: {\r\n            console.log(action.payload)\r\n            return {...state, confirmValues: action.payload}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const addAppointment = (item) => ({\r\n    type: ADD_APPOINTMENT,\r\n    payload: item\r\n})\r\n\r\nexport const deleteAppointment = (id) => ({\r\n    type: DELETE_APPOINTMENT,\r\n    payload: id\r\n})\r\nexport const toggleAppointment = (id) => ({\r\n    type: TOGGLE_APPOINTMENT,\r\n    payload: id\r\n})\r\n\r\nexport const setConfirmValues = (values) => ({\r\n    type: SET_CONFIRM_VALUES,\r\n    payload: values\r\n})\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux'\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport List from '@material-ui/core/List';\r\n\r\n\r\nimport {AppointmentItem} from \"./AppointmentItem\";\r\nimport {deleteAppointment, toggleAppointment} from \"../../store/appointReducer\";\r\nimport {Container} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    paper: {\r\n        minHeight: \"100%\",\r\n        width: \"100%\",\r\n        flex: \"1\"\r\n    },\r\n    emptyList: {\r\n        padding: \"40px\",\r\n        width: \"100%\",\r\n        textAlign: \"center\"\r\n    }\r\n}));\r\n\r\n\r\nconst Appointments = (props) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <Paper elevation={3} className={classes.paper}>\r\n            <List className={classes.root}>\r\n                {props.list.map((item) => {\r\n                    const labelId = `checkbox-list-label-${item.id}`;\r\n                    return <AppointmentItem key={item.id}\r\n                                            id={item.id}\r\n                                            fullName={item.fullName}\r\n                                            completed={item.completed}\r\n                                            date={item.date}\r\n                                            note={item.note}\r\n                                            labelId={labelId}\r\n                                            deleteHandler={() => props.deleteAppointment(item.id)}\r\n                                            toggleHandler={() => props.toggleAppointment(item.id)}\r\n                    />\r\n                })}\r\n            </List>\r\n\r\n            {props.list.length === 0 &&\r\n            <Container className={classes.emptyList}>\r\n                <Typography variant=\"h3\">\r\n                    List empty\r\n                </Typography>\r\n            </Container>\r\n            }\r\n\r\n        </Paper>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    list: state.appointments.list\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    deleteAppointment,\r\n    toggleAppointment\r\n}\r\n\r\nexport const AppointmentsContainer = connect(mapStateToProps, mapDispatchToProps)(Appointments)","import React from 'react';\r\nimport {DateTimePicker} from \"@material-ui/pickers\";\r\nimport {MuiPickersUtilsProvider} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\n\r\nexport const DatePicker = (props) => {\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <DateTimePicker\r\n                label=\"DateTimePicker\"\r\n                inputVariant=\"outlined\"\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n\r\n                readOnly={props.disabled}\r\n\r\n                variant={\"inline\"}\r\n                format=\"yyyy/MM/dd HH:mm\"\r\n                disableToolbar={\"true\"}\r\n                disablePast\r\n                required\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    );\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport styled from \"styled-components\"\r\n\r\nimport {Controller, useForm} from \"react-hook-form\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {DatePicker} from \"./DatePicker\";\r\nimport {setConfirmValues} from \"../../../store/appointReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n\r\nexport const Box = styled.div`\r\n  display:flex;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  margin-bottom: 30px;\r\n  width: 100%;\r\n  input {\r\n    height: 100%;\r\n    margin-right: 20px;\r\n  }\r\n  \r\n  form {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nexport const TabMakeAppointInfo = (props) => {\r\n    const [selectedDate, handleDateChange] = React.useState(new Date());\r\n\r\n    const {control, handleSubmit} = useForm();\r\n\r\n    const onSubmit = data => {\r\n        props.handleNext()\r\n        props.setConfirmValues({...data, date: props?.confirmValues?.date || selectedDate})\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\r\n                <Box>\r\n                    <Controller\r\n                        as={TextField}\r\n                        name=\"fullName\"\r\n                        control={control}\r\n                        defaultValue={props?.confirmValues?.fullName || \"\"}\r\n                        variant={\"outlined\"}\r\n                        label={\"Full Name\"}\r\n                        required\r\n                    />\r\n\r\n                    <DatePicker value={props?.confirmValues?.date || selectedDate}\r\n                                onChange={handleDateChange}\r\n                                disabled={false}/>\r\n                </Box>\r\n\r\n                <Box>\r\n                    <Controller\r\n                        as={TextField}\r\n                        control={control}\r\n                        defaultValue={props?.confirmValues?.note || \"\"}\r\n                        variant={\"filled\"}\r\n                        label={\"Note\"}\r\n                        name=\"note\"\r\n                        fullWidth\r\n                    />\r\n                </Box>\r\n\r\n                <Box>\r\n                    <Button onClick={props.handleBack}>\r\n                        Back\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={props.handleSubmit}\r\n                        type=\"submit\"\r\n                    >\r\n                        Next\r\n                    </Button>\r\n                </Box>\r\n            </form>\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    confirmValues: state.appointments.confirmValues\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setConfirmValues\r\n}\r\n\r\nexport const TabMakeAppointInfoContainer = connect(mapStateToProps, mapDispatchToProps)(TabMakeAppointInfo)\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport styled from \"styled-components\"\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {DatePicker} from \"../TabMakeAppointInfo/DatePicker\";\r\nimport {Box} from \"../TabMakeAppointInfo/TabMakeAppointInfo\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {addAppointment, setConfirmValues} from \"../../../store/appointReducer\";\r\n\r\n\r\nconst Container = styled.div`\r\n  display:flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`\r\n\r\nconst TabMakeAppointConfirm = (props) => {\r\n    const handleConfirm = () => {\r\n        props.addAppointment(props.confirmValues)\r\n        props.handleNext()\r\n        console.log(props)\r\n    }\r\n    return (\r\n        <Container>\r\n            <Box>\r\n                <TextField\r\n                    disabled\r\n                    name=\"fullName\"\r\n                    variant={\"outlined\"}\r\n                    label={\"Full Name\"}\r\n                    value={props?.confirmValues?.fullName}\r\n                />\r\n                <DatePicker value={props?.confirmValues?.date} disabled={true}/>\r\n            </Box>\r\n\r\n            <Box>\r\n                <TextField\r\n                    disabled\r\n                    name=\"note\"\r\n                    variant={\"filled\"}\r\n                    label={\"Note\"}\r\n                    value={props?.confirmValues?.note || \"Empty\"}\r\n                    fullWidth\r\n                />\r\n            </Box>\r\n\r\n\r\n            <Box>\r\n                <Button onClick={props.handleBack}>\r\n                    Back\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleConfirm}\r\n                    type=\"submit\"\r\n                >\r\n                    Confirm\r\n                </Button>\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    confirmValues: state.appointments.confirmValues\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    setConfirmValues,\r\n    addAppointment\r\n}\r\n\r\n\r\nexport const TabMakeAppointConfirmContainer = connect(mapStateToProps, mapDispatchToProps)(TabMakeAppointConfirm)\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport {TabMakeAppointConfirmContainer} from \"../Tabs/TabMakeAppointConfirm\";\r\nimport {TabMakeAppointInfoContainer} from \"../Tabs/TabMakeAppointInfo\";\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        minHeight: \"100%\",\r\n        width: \"100%\",\r\n        flex: \"1\",\r\n        padding: \"20px\"\r\n    }\r\n}));\r\n\r\nconst StepContent = (props) => {\r\n    switch (props.step) {\r\n        case 0:\r\n            return <TabMakeAppointInfoContainer handleBack={props.handleBack}\r\n                                                handleNext={props.handleNext}/>;\r\n        case 1:\r\n            return <TabMakeAppointConfirmContainer handleBack={props.handleBack}\r\n                                          handleNext={props.handleNext}/>;\r\n        default:\r\n            return <Redirect to=\"/\" />;\r\n    }\r\n}\r\n\r\n\r\nexport const NewAppointmentsForm = (props) => {\r\n    const classes = useStyles()\r\n\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n\r\n\r\n    return (\r\n        <Paper elevation={3} className={classes.paper}>\r\n            <Container>\r\n                <Stepper activeStep={activeStep}>\r\n                    {<StepContent step={activeStep}\r\n                                  handleBack={handleBack}\r\n                                  handleNext={handleNext}\r\n                    />}\r\n                </Stepper>\r\n            </Container>\r\n        </Paper>\r\n    );\r\n};\r\n\r\n","import React from 'react';\nimport {HashRouter, Route} from \"react-router-dom\";\nimport styled from \"styled-components\"\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport {HeaderContainer} from \"./components/Header\";\n\nimport {AppointmentsContainer} from \"./components/Appointments\";\nimport {NewAppointmentsForm} from \"./components/NewAppointmentsForm\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nconst SApp = styled.div`\n    width: 100%;\n    display:flex;\n    flex-direction: column;\n    align-items: center;\n`\n\nconst SContentApp = styled.div`\n  margin-top: 20px;\n  width: 50%;\n  //min-height: 00px;\n`\n\n\nexport function App() {\n    return (\n        <HashRouter>\n            <SApp>\n                <AppBar position=\"static\">\n                    <HeaderContainer/>\n                </AppBar>\n\n                <SContentApp>\n                    <Route exact path=\"/\" component={AppointmentsContainer}/>\n                    <Route exact path=\"/makeAppointment\" component={NewAppointmentsForm}/>\n                </SContentApp>\n            </SApp>\n        </HashRouter>\n    );\n}\n","import {createStore} from \"redux\";\r\nimport { combineReducers } from 'redux'\r\nimport {appointmentsReducer} from './appointReducer'\r\n\r\nconst persistedState = localStorage.getItem('reduxState')\r\n    ? JSON.parse(localStorage.getItem('reduxState'))\r\n    : {}\r\n\r\n\r\nconst reducers = combineReducers({\r\n    appointments: appointmentsReducer\r\n})\r\n\r\nexport const store = createStore(reducers, persistedState)\r\n\r\nstore.subscribe(()=>{\r\n    localStorage.setItem('reduxState', JSON.stringify(store.getState()))\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root'));\n\n\n"],"sourceRoot":""}